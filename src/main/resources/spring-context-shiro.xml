<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
							http://www.springframework.org/schema/context  
							http://www.springframework.org/schema/context/spring-context-4.1.xsd"
							default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:wctf.properties" />

	<!-- 缓存管理器 -->
	<!-- cacheManager在spring-context.xml中配置 -->
	
	<!-- 自定义 Session 管理器 -->
	<bean id="sessionManager" class="cn.gin.wctf.common.security.shiro.session.SessionManager">
		<property name="sessionDAO" ref="sessionDAO"></property>
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"></property>
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"></property>
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID，会与Servlet容器名冲突, 如Jetty, Tomcat 等默认JSESSIONID, 
			当跳出shiro servlet时如 error-page 容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="${session.id.cookie}"/>
	</bean>
	
	<!-- Shiro Session 管理器 (1)，内部使用 EhCache，使用的 CacheSessionDAO -->
	<!-- 
	<bean id="sessionDAO" class="cn.gin.wctf.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="identityGenerator" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	-->
	<!-- Shiro Session 管理器 (2)，内部使用 Redis，使用的 RedisSessionDAO -->
	<bean id="sessionDAO" class="cn.gin.wctf.common.security.shiro.session.RedisSessionDAO">
		<property name="sessionIdGenerator" ref="identityGenerator" />
		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" />
	</bean>
	
	<!-- Shiro 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizingRealm" ></property>
		<property name="cacheManager" ref="shiroCacheManager"></property>
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>
	
	<!-- Shiro 缓存管理器 (1)，内部使用 EhCache，使用的 CacheManager 定义在 Spring-context 中 -->
	<!-- 
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	-->
	<!-- Shiro 缓存管理器 (2)，内部使用 Redis -->
	<bean id="shiroCacheManager" class="cn.gin.wctf.common.security.shiro.cache.RedisCacheManager">
		<property name="cacheKeyPrefix" value="${redis.keyPrefix}_cache_" />
	</bean>
	
	 
	<!-- Shiro 安全认证过滤器-->
	<bean id="multipleAccessFilter" class="cn.gin.wctf.module.sys.security.MultipleAccessFilter">
		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_"></property>
		<property name="loginUrl" value="${web.root.user}/login"></property>
	</bean>
	<bean name="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="${web.root.user}/login"></property>
		<property name="successUrl" value="/index"></property>
		<property name="unauthorizedUrl" value="${web.root.user}/login"></property>
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
			</map>
		</property>
		<property name="filterChainDefinitions" ref="filterChainDefinitions"></property>
	</bean>
	
	<!-- Shiro权限过滤过滤器定义 -->
	<bean id="filterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				<!-- 匿名访问：首页、静态资源、公共接口、用户注册、发帖查询 -->
				/ = anon
				/index** = anon
				/static/** = anon
				/common/** = anon
				${web.root.user}/reg** = anon
				<!-- 验证访问 -->
				${web.root.user}/login = authc
				${web.root.user}/logout = logout
				${web.root.user}/** = authc
				/post/send = authc
				/post/** = anon
				/** = authc
			</value>
		</constructor-arg>
	</bean>
	
	<!-- 保证实现了 Shiro 内部 lifecycle 函数的 bean 执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!-- AOP 方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>